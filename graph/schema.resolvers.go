package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.43

import (
	"context"

	"github.com/hagios2/simple-app/graph/model"
	"github.com/hagios2/simple-app/service"
	"github.com/hagios2/simple-app/util"
)

// AddVideo is the resolver for the addVideo field.
func (r *mutationResolver) AddVideo(ctx context.Context, input model.VideoInput) (*model.Video, error) {
	var videoService service.VideoService
	video := util.ModelVideoToEntityVideoConverter(input)
	newVideo := videoService.SaveGQL(video)

	return &newVideo, nil
}

// Videos is the resolver for the videos field.
func (r *queryResolver) Videos(ctx context.Context) ([]*model.Video, error) {
	var videoService service.VideoService
	var newVideos []*model.Video
	videos := videoService.FindAll()

	for _, video := range videos {
		newVideos = append(newVideos, util.EntityVideoToModelVideoConverter(video))
	}

	return newVideos, nil
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
